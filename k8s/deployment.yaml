apiVersion: apps/v1
kind: Deployment
metadata:
  name: fun-food-times-user-management
  labels:
    app: fun-food-times-user-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fun-food-times-user-management
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: fun-food-times-user-management
    spec:
      containers:
        - image: <IMAGE>
          name: fun-food-times-user-management
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-url-secret
                  key: DATABASE_URL

---
apiVersion: v1
kind: Service
metadata:
  name: fun-food-times-user-management
spec:
  selector:
    app: fun-food-times-user-management # Match the labels in your Deployment
  ports:
    - protocol: TCP
      port: 80        # Service's port (used by Ingress)
      targetPort: 5000 # Port exposed by the containers
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: user-management-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: / # Ensures paths are routed correctly
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  ingressClassName: nginx
  rules:
    - host: 
      http:
        paths:
          - path: /fun-food-times-user-management
            pathType: Prefix
            backend:
              service:
                name: fun-food-times-user-management
                port:
                  number: 80